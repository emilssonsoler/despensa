/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfacesGraficas;

import despensa.DB.Conexion;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;

import javax.swing.JTable;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Emilsson Soler
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
    }

    //actualiza tabla de proveedores
    public static void actualizarInformacionTablaProveedores(JTable tabla) {
        String[] columnNames = {"Nombre","Descripcion"};
        Object[][] data=despensa.DB.GestionProveedor.getArregloProveedores();
        
        DefaultTableModel defTableModel = new DefaultTableModel(data, columnNames);
        
        tabla.setModel(defTableModel);
    }
    
    //actualizar tabla producto
     public static void actualizarInformacionTablaProducto(JTable tabla) {
        String[] columnNames = {"Nombre","Codigo","Proveedor","Precio Compra","Precio Venta","Refrigeracion"};
        Object[][] data=despensa.DB.GestionProducto.getArregloProducto();
        
        DefaultTableModel defTableModel = new DefaultTableModel(data, columnNames);
        
        tabla.setModel(defTableModel);
    }

     //actualizar tabla paquetes
     public static void actualizarInformacionTablaFactura(JTable tabla) {
        String[] columnNames = {"Producto","Precio","Cantidad","Total"};
        Object[][] data=despensa.DB.ProcesoDeVerificacionDeFactura.obtenerArregloDeLstCompra(Facturar.lstcompra);
        DefaultTableModel defTableModel = new DefaultTableModel(data, columnNames);
        tabla.setModel(defTableModel);
    }
     public static void actualizarInformacionTablaPaquetes(JTable tabla) {
        String[] columnNames = {"Producto","Cantidad","Fecha de vencimiento","Proveedor"};
        Object[][] data=despensa.DB.GestionPaquetes.getArregloPaquetes();
        
        DefaultTableModel defTableModel = new DefaultTableModel(data, columnNames);
        
        tabla.setModel(defTableModel);
    }
     
     //actualizar Combobox de proveedores
    public static void actualizarComboBoxProveedor(JComboBox combo){
        combo.setModel(despensa.DB.GestionProveedor.getDefaultCboModel());
    
    }
    //actulizar combobox productos
    public static void actualizarComboBoxProducto(JComboBox combo){
        combo.setModel(despensa.DB.GestionProducto.getDefaultCboModelProducto());
    
    }
    public static void actualizarComboBoxPaquete(JComboBox combo){
        combo.setModel(despensa.DB.GestionPaquetes.getDefaultCboModelPaquetes());
    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorioP = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        GestionPaquetes = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        Gesptoducto = new javax.swing.JMenuItem();
        paquetes = new javax.swing.JMenuItem();
        factura = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        reporteProveedores = new javax.swing.JMenuItem();
        reportePro = new javax.swing.JMenuItem();
        reportPaq = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        GestionPaquetes.setMnemonic('e');
        GestionPaquetes.setText("Gestiones");
        GestionPaquetes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GestionPaquetesActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Proveedor");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        GestionPaquetes.add(jMenuItem1);

        Gesptoducto.setText("Producto");
        Gesptoducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GesptoductoActionPerformed(evt);
            }
        });
        GestionPaquetes.add(Gesptoducto);

        paquetes.setText("Paquetes");
        paquetes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paquetesActionPerformed(evt);
            }
        });
        GestionPaquetes.add(paquetes);

        factura.setText("Factura");
        factura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturaActionPerformed(evt);
            }
        });
        GestionPaquetes.add(factura);

        menuBar.add(GestionPaquetes);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Reportes");

        reporteProveedores.setMnemonic('c');
        reporteProveedores.setText("Reporte Proveedores");
        reporteProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reporteProveedoresActionPerformed(evt);
            }
        });
        helpMenu.add(reporteProveedores);

        reportePro.setMnemonic('a');
        reportePro.setText("Reporte Productos");
        reportePro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reporteProActionPerformed(evt);
            }
        });
        helpMenu.add(reportePro);

        reportPaq.setText("Reporte Paquetes");
        reportPaq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportPaqActionPerformed(evt);
            }
        });
        helpMenu.add(reportPaq);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorioP, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorioP, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       GestionProveedor ventana = new GestionProveedor();
       Principal.escritorioP.add(ventana);
        Dimension desktopSize = Principal.escritorioP.getSize();
        Dimension FrameSize = ventana.getSize();
        ventana.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
        ventana.show();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void GesptoductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GesptoductoActionPerformed
        GestionProducto ventana = new GestionProducto();
       Principal.escritorioP.add(ventana);
        Dimension desktopSize = Principal.escritorioP.getSize();
        Dimension FrameSize = ventana.getSize();
        ventana.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
        ventana.show();
    }//GEN-LAST:event_GesptoductoActionPerformed

    private void GestionPaquetesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GestionPaquetesActionPerformed
        
    }//GEN-LAST:event_GestionPaquetesActionPerformed

    private void paquetesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paquetesActionPerformed
         GestionPaquetes ventana = new GestionPaquetes();
       Principal.escritorioP.add(ventana);
        Dimension desktopSize = Principal.escritorioP.getSize();
        Dimension FrameSize = ventana.getSize();
        ventana.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
        ventana.show();
    }//GEN-LAST:event_paquetesActionPerformed

    private void reporteProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reporteProveedoresActionPerformed
        try {
           Connection conn = Conexion.getConnection();
            JasperReport reporte = null;
            String path ="src\\Reportes\\ReportesProveedores.jasper";
            reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
            JasperPrint jprint = JasperFillManager.fillReport(reporte, null, conn);
            JasperViewer view  = new JasperViewer(jprint, false);
            view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            view.setVisible(true);
              conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_reporteProveedoresActionPerformed

    private void reporteProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reporteProActionPerformed
       try {
           Connection conn = Conexion.getConnection();
            JasperReport reporte = null;
            String path ="src\\Reportes\\ReporteProductos.jasper";
            reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
            JasperPrint jprint = JasperFillManager.fillReport(reporte, null, conn);
            JasperViewer view  = new JasperViewer(jprint, false);
            view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            view.setVisible(true);
              conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_reporteProActionPerformed

    private void reportPaqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportPaqActionPerformed
        try {
           Connection conn = Conexion.getConnection();
            JasperReport reporte = null;
            String path ="src\\Reportes\\ReportePaquetes.jasper";
            reporte = (JasperReport) JRLoader.loadObjectFromFile(path);
            JasperPrint jprint = JasperFillManager.fillReport(reporte, null, conn);
            JasperViewer view  = new JasperViewer(jprint, false);
            view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            view.setVisible(true);
              conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_reportPaqActionPerformed

    private void facturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturaActionPerformed
        Facturar ventana = new Facturar();
       Principal.escritorioP.add(ventana);
        Dimension desktopSize = Principal.escritorioP.getSize();
        Dimension FrameSize = ventana.getSize();
        ventana.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);
        ventana.show();
    }//GEN-LAST:event_facturaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Gesptoducto;
    private javax.swing.JMenu GestionPaquetes;
    public static javax.swing.JDesktopPane escritorioP;
    private javax.swing.JMenuItem factura;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem paquetes;
    private javax.swing.JMenuItem reportPaq;
    private javax.swing.JMenuItem reportePro;
    private javax.swing.JMenuItem reporteProveedores;
    // End of variables declaration//GEN-END:variables

}
